
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>InsertOrder</title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <!--kendo-->
    <link href="~/kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/kendo/styles/kendo.flat.min.css" rel="stylesheet" />

    <script src="~/kendo/js/kendo.all.min.js"></script>
</head>
@*<body style="background-image: url('../../img/back.jpg'); background-size:cover;">*@
<body>

    <div class="container">
        @*<h3>新增訂單</h3>*@
        <div style="background-color:black;color:white;font-size:32px;margin-top:20px;border-radius:10px 10px 0px 0px;">
            <span style="padding:10px">新增訂單</span>
        </div>
        <table class="table table-bordered">
            <tr>
                <td><span style="color:red">*</span><b>客戶名稱</b></td>
                <td colspan="3">
                    <input id="CustName" placeholder="-Select-" class="required" />
                    @*@Html.DropDownList("CustName", (List<SelectListItem>)ViewBag.CustName,new { @class="required"})*@
                </td>
            </tr>
            <tr>
                <td><span style="color:red">*</span><b>負責員工名稱</b></td>
                <td colspan="3">
                    <input id="EmpName" placeholder="-Select-" class="required" />
                    @*@Html.DropDownList("EmpName", (List<SelectListItem>)ViewBag.EmpName,new { @class= "required" })*@
                </td>
            </tr>
            <tr>
                <td><span style="color:red">*</span><b>訂單日期</b></td>
                <td>
                    <input id="OrderDate" value="年 / 月 / 日" class="required" />
                    @*<input id="OrderDate" type="date" class="required">*@
                </td>
                <td><span style="color:red">*</span><b>需要日期</b></td>
                <td>
                    <input id="RequireDate" value="年 / 月 / 日" class="required" />
                    @*<input id="RequireDate" type="date" class="required">*@
                </td>
            </tr>
            <tr>
                <td><b>出貨日期</b></td>
                <td colspan="3">
                    <input id="ShipDate" value="年 / 月 / 日" class="required" />
                    @*<input id="ShipDate" type="date">*@
                    @*@Html.TextBoxFor(model => model.OrderDate, new { @type = "date" })*@
                </td>
            </tr>
            <tr>
                <td><span style="color:red">*</span><b>出貨公司名稱</b></td>
                <td colspan="3">
                    <input id="ShipCompany" placeholder="-Select-" class="required" />
                    @*@Html.DropDownList("ShipCompany", (List<SelectListItem>)ViewBag.ShipCompany,new {@class= "required" })*@
                    @*@Html.TextBoxFor(model => model.OrderDate, new { @type = "date" })*@
                </td>
            </tr>
            <tr>
                <td><b>運費</b></td>
                <td colspan="3">
                    <input id="Freight" type="text" style="text-align: right" />
                    @*@Html.TextBox("Freight")*@
                </td>
            </tr>
            <tr>
                <td><span style="color:red">*</span><b>出貨國家</b></td>
                <td>
                    @Html.TextBox("ShipCountry", null, new { @class = "required" })
                </td>
                <td><span style="color:red">*</span><b>出貨城市</b></td>
                <td>
                    @Html.TextBox("ShipCity", null, new { @class = "required" })
                </td>
            </tr>
            <tr>
                <td><b>出貨地區</b></td>
                <td>
                    @Html.TextBox("ShipRegion")
                </td>
                <td><b>郵遞區號</b></td>
                <td>
                    @Html.TextBox("ShipPostalCode")
                </td>
            </tr>
            <tr>
                <td><span style="color:red">*</span><b>出貨地址</b></td>
                <td>
                    @Html.TextBox("ShipAddress", null, new { @class = "required" })
                </td>
                <td><span style="color:red">*</span><b>出貨說明</b></td>
                <td>
                    @Html.TextBox("ShipName", null, new { @class = "required" })
                </td>
            </tr>
            <tr>
                <td><b>訂單金額總計</b></td>
                <td colspan="3" align="right"><span id="allTotal">$ 0</span></td>
            </tr>

            <tr>
                <td></td>
                <td colspan="3">
                    <input id="SaveData" type="button" value="存檔">
                    <input id="beforePage" type="button" value="回前一頁" />
                </td>

            </tr>
        </table>

        <h3>訂單明細</h3>
        <script src="http://demos.telerik.com/kendo-ui/content/shared/js/products.js"></script>
        <div id="example">
            <div id="grid"></div>
        </div>

        <br><br><br><br><br><br>

        <input id="addOrderDetail" type="button" value="+新增商品" />
        <table id="tab" class="table table-bordered">
            <tbody id="tab-tbody">
                <tr>
                    <td>商品</td>
                    <td>單價</td>
                    <td>數量</td>
                    <td>小計</td>
                    <td></td>
                </tr>
            </tbody>
        </table>


    </div>

    <script>

        var eee;
        var model;
        $(document).ready(function () {
            var dataSource = new kendo.data.DataSource({
                schema: {
                    model: {
                        id: "ProductID",
                        fields: {
                            Product: { defaultValue: { ProductID: "0", ProductName: "-Select-"} },
                            UnitPrice: { type: "number"/*, validation: { required: true, min: 1}*/ },
                            Quantity:{ type: "number"/*, validation: { required: true, min: 1}*/ },
                            SubTotal:{ type: "number" /*editable: false*//*, validation: { required: true, min: 1}*/ },
                        }
                    }
                }
            });
            //<span class='k-icon k-i-close' id='temp' style='float: right;' onclick='ChangeSubTotal()'></span>"
            $("#grid").kendoGrid({
                dataSource: dataSource,
                //   pageable: true,
                toolbar: ["create"],
                columns: [
                    { field:"Product",title:"商品",  editor: productDropDownEditor, template: "#=Product.ProductName#" },
                    { field: "UnitPrice", title: "單價",editor: SubTotalChange_Editor},
                     { field:"Quantity",title:"數量" ,editor: SubTotalChange_Editor},
                    { field: "SubTotal", title:"小計", format: "{0:c}", width: "130px" },
                    { command: "destroy", title: "", width: "150px" }],
                editable: true,
                edit: function(e) {
                    eee=e;
                    model = e.model; //reference to the model that is about the be edited
          

                    //    e.model.set("Quantity",222);

                    //    row.find("td.smso_A1A4").text((item.A1 + item.A4).toString());

                    //  
                    var container = e.container; //reference to the editor container
 
                    var productDropDownList = container.find("[data-role=dropdownlist]").data("kendoDropDownList"); //find widget element and then get the widget instance
                    // if DropDownListwidget is found
                    if (productDropDownList) {
                        //  console.log("DropDownList", productDropDownList);
                    }

                    var priceNumericTextBox = container.find("[data-role=numerictextbox]").data("kendoNumericTextBox"); //find widget element and then the widget instance
                    if (priceNumericTextBox) {
                        //  
                       //   $("#grid").data("kendoNumericTextBox").trigger("change");
                        //  console.log("NumericTextBox", priceNumericTextBox);
                    }

                    //   ChangeSubTotal();
                 //   console.log( e.container.find(this));
                    //e.container.find(this).click(function(){
                    //    console.log("eeerr");
                    //});
                    var grid = this;
                    var fieldName = grid.columns[e.container.index()].field;
                    grid.columns[e.container.index()].onclick=function(){console.log("ad");};
                    //  console.log(grid.columns[e.container.index()]);
                }
                

            });

          


            //ComboBox-CustName
            var custName = [];
            var array=@Html.Raw(Json.Encode(@ViewBag.CustName));
            for(var i=0;i<array.length;i++) {
                custName.push({text:array[i].Text,value:array[i].Value});
            }

            $("#CustName").kendoComboBox({
                dataTextField:"text",
                dataValueField:"value",
                dataSource:custName,
                filter:"contains",
                suggest:true,
                index:0
            });

            //ComboBox-EmpName
            var empName=[];
            var array=@Html.Raw(Json.Encode(@ViewBag.EmpName));
            for(var i=0;i<array.length;i++){
                empName.push({text:array[i].Text,value:array[i].Value});
            }

            $("#EmpName").kendoComboBox({
                dataTextField:"text",
                dataValueField:"value",
                dataSource:empName,
                filter:"contains",
                suggest:true,
                index:0
            });

            //ComboBox-ShipCompany
            var shipCompany=[];
            var array=@Html.Raw(Json.Encode(ViewBag.ShipCompany));
            for(var i=0;i<array.length;i++){
                shipCompany.push({text:array[i].Text,value:array[i].Value});
            }

            $("#ShipCompany").kendoComboBox({
                dataTextField:"text",
                dataValueField:"value",
                dataSource:shipCompany,
                filter:"contains",
                suggest:true,
                index:0
            });


            //DataPicker
            $("#OrderDate").kendoDatePicker({
                format:"yyyy/MM/dd",
                animation: {
                    close: {
                        effects: "fadeOut zoom:out",
                        duration: 300
                    },
                    open: {
                        effects: "fadeIn zoom:in",
                        duration: 300
                    }
                }
            });
            $("#RequireDate").kendoDatePicker({
                format:"yyyy/MM/dd",
                animation: {
                    close: {
                        effects: "fadeOut zoom:out",
                        duration: 300
                    },
                    open: {
                        effects: "fadeIn zoom:in",
                        duration: 300
                    }
                }
            });
            $("#ShipDate").kendoDatePicker({
                format:"yyyy/MM/dd",
                animation: {
                    close: {
                        effects: "fadeOut zoom:out",
                        duration: 300
                    },
                    open: {
                        effects: "fadeIn zoom:in",
                        duration: 300
                    }
                }
            });

            //button
            $("#SaveData").kendoButton();
            $("#beforePage").kendoButton();
        });

        function SubTotalChange_Editor(container, options){
            console.log( container );
            $('<input data-bind="value:' + options.field + '"/>')
             .appendTo(container).kendoNumericTextBox({
                 autoBind: true,
                 change:ChangeSubTotal
             });
        }

        function productDropDownEditor(container, options) {
            var Product=[];
            Product.push({ProductID:0,ProductName: "-Select-"});
            $.ajax({
                type:'get',
                url:'@Url.Action("getProduct")',
                async:false,
                success:function(result){
                    $.each(result,function(i,field){
                        var Myfield=field.split(',');
                        Product.push({ProductID: Myfield[0],ProductName: Myfield[1]});
                    });
                    console.log("ok");
                
                },error:function(){
                    console.log(error);
                }
            });

            $('<input required data-text-field="ProductName" data-value-field="ProductID" data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: true,
                dataTextField: "ProductName",
                dataValueField: "ProductID",
                dataSource:Product,
                change:onChange_productDropDown
            });
        }

        function onChange_productDropDown(e){
            console.log(e.sender.text()+" "+e.sender.value());
            
            $.ajax({
                type: 'post',
                url: '@Url.Action("getProductPrice")',
                data: {
                    index: e.sender.value()
                }, success: function (result) {
                    model.set("UnitPrice",result);
                    ChangeSubTotal();
                }, error: function () {
                    alert("error");
                }
            });
            //可抓所有tr
            var theGrid = $("#grid").data("kendoGrid");
            var tr = $("#grid tbody").find('tr').each(function () {
                var model =  theGrid.dataItem(this);
                kendo.bind(this,model);
            });
        }
        function aa123(){
            console.log("123");
        }
        function ChangeSubTotal()
        { 
            var subtotal=model.UnitPrice*model.Quantity;
            model.set("SubTotal",subtotal);
        }




        document.getElementById("SaveData").onclick = function () {
            var class_required=document.getElementsByClassName("required");

            var  boo =false;
            for (i = 0; i < class_required.length; i++)
            {
                if(class_required[i].value=="" || class_required[i].value==0  )
                {
                    boo = true;
                    break;
                }
            }

            boo ? alert("請輸入必填欄位") : saveData();
        };


        function saveData() {
            var ODitem = [], ODprice = [], ODquantity = [];

            var DomProducts = document.getElementsByClassName("DomProductSelect");
            var DomPrice = document.getElementsByClassName("DomProductPrice");
            var DomQuantuty = document.getElementsByClassName("DomProductQuantity");
            for (i = 0; i < DomProducts.length; i++) {
                if (DomProducts[i].value != 0) {
                    ODitem.push(DomProducts[i].value);
                    ODprice.push(DomPrice[i].value);
                    ODquantity.push(DomQuantuty[i].value);
                }

            }

            $.ajax({
                type: 'post',
                url: '@Url.Action("InsertOrder")',
                data: {
                    CustomerID: $('#CustName option:selected').val(),
                    EmployeeID: $('#EmpName option:selected').val(),
                    OrderDate: $('#OrderDate').val(),
                    RequiredDate: $('#RequireDate').val(),
                    ShippedDate: $('#ShipDate').val(),
                    ShipperID: $('#ShipCompany option:selected').val(),
                    Freight: $('#Freight').val(),
                    ShipCountry: $('#ShipCountry').val(),
                    ShipCity: $('#ShipCity').val(),
                    ShipRegion: $('#ShipRegion').val(),
                    ShipPostalCode: $('#ShipPostalCode').val(),
                    ShipAddress: $('#ShipAddress').val(),
                    ShipName: $('#ShipName').val(),
                    ODitem: ODitem,
                    ODprice: ODprice,
                    ODquantity: ODquantity

                }, success: function () {
                    alert("success");

                }, error: function () { alert("Error"); }
            });
        }

        document.getElementById("beforePage").onclick = function () {
            location.href = "/Order/QueryOrder";
        };

        document.getElementById("addOrderDetail").onclick = function () {
            var Tr = document.createElement("tr");
            var Td_pro = document.createElement("td");
            var Td_price = document.createElement("td");
            var Td_quantity = document.createElement("td");
            var Td_total = document.createElement("td");
            var Td_cancel = document.createElement("td");

            var selectProduct = document.createElement("select");
            selectProduct.setAttribute("class", "DomProductSelect");
            selectProduct.addEventListener("change", function () {
                var thisObject = this;
                var index = this.selectedIndex;
                var value = this.getElementsByTagName("option")[index].value;
                var rowIndex = this.parentNode.parentNode.rowIndex;
                if (value != 0) {
                    $.ajax({
                        type: 'post',
                        url: '@Url.Action("getProductPrice")',
                        data: {
                            index: value
                        }, success: function (result) {
                            document.getElementsByClassName("DomProductPrice")[rowIndex - 1].value = result;
                            ChangeTotal(thisObject);
                        }, error: function () {
                            alert("error");
                        }
                    });
                } else {
                    document.getElementsByClassName("DomProductPrice")[rowIndex - 1].value = 0;
                    ChangeTotal(thisObject);
                }
            });
            var option_0 = document.createElement("option");
            option_0.text = "";
            option_0.value = 0;
            selectProduct.appendChild(option_0);

            $(document).ready(function () {
                $.get('@Url.Action("getProduct")', function (result) {
                    $.each(result, function (i, field) {
                        var Myfield = field.split(',');
                        $(".DomProductSelect").append("<option value='" + Myfield[0] + "'>" + Myfield[1] + "</option>");
                    });
                });
            });

            Td_pro.appendChild(selectProduct);

            var TextBox_price = document.createElement("input");
            TextBox_price.type = "text";
            TextBox_price.value = 0;
            TextBox_price.style.textAlign = "right";
            TextBox_price.setAttribute("class", "DomProductPrice");
            TextBox_price.addEventListener("change", function () {
                ChangeTotal(this);
            });
            Td_price.appendChild(TextBox_price);

            var TextBox_quantity = document.createElement("input");
            TextBox_quantity.type = "text";
            TextBox_quantity.value = 0;
            TextBox_quantity.style.textAlign = "right";
            TextBox_quantity.setAttribute("class", "DomProductQuantity");
            TextBox_quantity.addEventListener("change", function () {
                ChangeTotal(this);
            });

            Td_quantity.appendChild(TextBox_quantity);

            var span_total = document.createElement("span");
            span_total.setAttribute("class", "DomTotal");
            span_total.appendChild(document.createTextNode("0"));

            Td_total.align = "right";
            Td_total.appendChild(span_total);

            var Btn_cancel = document.createElement("button");
            Btn_cancel.setAttribute("class", "DomBtnCancel");
            Btn_cancel.addEventListener("click", function () {
                var index = this.parentNode.parentNode.rowIndex;
                document.getElementById("tab").deleteRow(index);
                doAllTotal();
            });
            Btn_cancel.appendChild(document.createTextNode("取消"));
            Td_cancel.appendChild(Btn_cancel);

            Tr.appendChild(Td_pro);
            Tr.appendChild(Td_price);
            Tr.appendChild(Td_quantity);
            Tr.appendChild(Td_total);
            Tr.appendChild(Td_cancel);

            document.getElementById("tab-tbody").appendChild(Tr);
        };

        function ChangeTotal(thisObject) {
            var index = thisObject.parentNode.parentNode.rowIndex - 1;

            var price = document.getElementsByClassName("DomProductPrice")[index];
            if (price.value == "") price.value = 0;
            var quantity = document.getElementsByClassName("DomProductQuantity")[index];
            if (quantity.value == "") quantity.value = 0;

            var Total = document.getElementsByClassName("DomTotal")[index];
            Total.innerHTML = formatNumber(price.value * quantity.value);

            doAllTotal();
        }

        function doAllTotal() {
            var domTotal = document.getElementsByClassName("DomTotal");
            var sum = 0;
            for (i = 0; i < domTotal.length; i++) {
                sum += parseFloat(replaceAll(domTotal[i].innerHTML));
            }
            document.getElementById("allTotal").innerHTML = "$ " + formatNumber(sum);
        }

        function replaceAll(n) {
            while (n.indexOf(",") != -1) {
                n = n.replace(",", "");
            }
            return n;
        }

        function formatNumber(n) {
            n += "";
            var arr = n.split(".");
            var re = /(\d{1,3})(?=(\d{3})+$)/g;
            return arr[0].replace(re, "$1,") + (arr.length == 2 ? "." + arr[1] : "");
        }






    </script>
</body>
</html>
